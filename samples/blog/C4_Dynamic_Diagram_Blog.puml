@startuml C4 Dynamic Diagram - Blog

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Dynamic.puml

AddRelTag("event", $lineStyle = DashedLine())

SHOW_PERSON_OUTLINE()
'LAYOUT_LEFT_RIGHT()
'LAYOUT_TOP_DOWN()
'LAYOUT_AS_SKETCH()
'LAYOUT_WITH_LEGEND()

title System Dynamic diagram for Blogging System

Person(writer, "Writer", "A writer for posts, so readers can read them.")
Person_Ext(reader, "Reader", "A reader for published posts by writers.")

System_Boundary(bloggingSystem, "Blogging System"){
  Container(webApp, "Web App", "Angular", "Web Application that allow users to create, update and read posts.", "angular")
  'Container(mobileApp, "Mobile App", "AngularJS", "Mobile Application that allow users to read all published posts", "android")
  Container(blogMicro, "Blog MicroService", "Spring Boot", "MicroService that expose an API Rest with operations related to Posts", "spring")
  Container(notificationMicro, "Notification MicroService", "Spring Boot", "MicroService that consumes events from Kafka and publish to E-mail System", "spring")
  ContainerDb(blogDatabase, "Blog Database", "Postgres", "Database to store all post created", "postgresql")
  ContainerQueue(messageBroker, "Message Broker", "Kafka", "Distributed data store optimized for ingesting and processing streaming data in real-time.", "kafka")
}

System_Ext(mailSystem, "E-mail system", "The internal Microsoft Exchange e-mail system.")

RelIndex_R(Index(), writer, webApp, "Write Post")
RelIndex_R(Index(), webApp, blogMicro, "Write Post", "https")
RelIndex_D(Index(), blogMicro, blogDatabase, "Writes to", "JDBC")
RelIndex_L(Index(), blogDatabase, messageBroker, "Publish Post", "Kafka", $tags="event", "Outbox Pattern with Kafka Connect")
RelIndex(Index(), messageBroker, notificationMicro, "Consume Post", "Kafka", $tags="event")
RelIndex_L(Index(), notificationMicro, mailSystem, "Sends Notification", "async,https")
RelIndex_U(Index(), mailSystem, reader, "Sends Notification to", "SMTP")

@enduml
